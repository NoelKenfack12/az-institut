<?php

namespace Proxies\__CG__\Users\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Users\UserBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'nom', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'prenom', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'salt', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'tel', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'mailval', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'datebeg', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'dateend', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'dateins', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'telval', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'pays', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'imgprofil', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'servicetext');
        }

        return array('__isInitialized__', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'nom', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'prenom', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'username', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'salt', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'tel', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'mailval', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'datebeg', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'dateend', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'dateins', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'telval', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'pays', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'imgprofil', '' . "\0" . 'Users\\UserBundle\\Entity\\User' . "\0" . 'servicetext');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getServicetext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServicetext', array());

        return parent::getServicetext();
    }

    /**
     * {@inheritDoc}
     */
    public function setServicetext(\General\ServiceBundle\Servicetext\GeneralServicetext $service)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServicetext', array($service));

        return parent::setServicetext($service);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', array($nom));

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', array());

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setTel($tel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTel', array($tel));

        return parent::setTel($tel);
    }

    /**
     * {@inheritDoc}
     */
    public function getTel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTel', array());

        return parent::getTel();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatebeg($datebeg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatebeg', array($datebeg));

        return parent::setDatebeg($datebeg);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatebeg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatebeg', array());

        return parent::getDatebeg();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateend($dateend)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateend', array($dateend));

        return parent::setDateend($dateend);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateend', array());

        return parent::getDateend();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateins($dateins)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateins', array($dateins));

        return parent::setDateins($dateins);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateins()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateins', array());

        return parent::getDateins();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelval($telval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelval', array($telval));

        return parent::setTelval($telval);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelval()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelval', array());

        return parent::getTelval();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailval($mailval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailval', array($mailval));

        return parent::setMailval($mailval);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailval()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailval', array());

        return parent::getMailval();
    }

    /**
     * {@inheritDoc}
     */
    public function premajuscule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'premajuscule', array());

        return parent::premajuscule();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', array($roles));

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($role));

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($role));

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', array($salt));

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function name($tail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'name', array($tail));

        return parent::name($tail);
    }

    /**
     * {@inheritDoc}
     */
    public function setImgprofil(\Users\UserBundle\Entity\Imgprofil $imgprofil = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImgprofil', array($imgprofil));

        return parent::setImgprofil($imgprofil);
    }

    /**
     * {@inheritDoc}
     */
    public function getImgprofil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImgprofil', array());

        return parent::getImgprofil();
    }

    /**
     * {@inheritDoc}
     */
    public function setPays(\Produit\ServiceBundle\Entity\Pays $pays = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPays', array($pays));

        return parent::setPays($pays);
    }

    /**
     * {@inheritDoc}
     */
    public function getPays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPays', array());

        return parent::getPays();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', array($prenom));

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', array());

        return parent::getPrenom();
    }

}
