<?php

namespace Proxies\__CG__\Produit\ServiceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Service extends \Produit\ServiceBundle\Entity\Service implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'id', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'nom', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'description', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'breve', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'keyword', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'link', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'nomcompte', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'numcompte', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'rang', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'principal', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'date', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'user', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'souscategorie', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'imgservice', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'evenements', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'commentaireblogs', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'ressourcearticles', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'typearticle', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'type', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'servicetext', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'em');
        }

        return array('__isInitialized__', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'id', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'nom', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'description', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'breve', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'keyword', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'link', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'nomcompte', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'numcompte', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'rang', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'principal', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'date', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'user', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'souscategorie', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'imgservice', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'evenements', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'commentaireblogs', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'ressourcearticles', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'typearticle', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'type', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'servicetext', '' . "\0" . 'Produit\\ServiceBundle\\Entity\\Service' . "\0" . 'em');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Service $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setServicetext(\General\ServiceBundle\Servicetext\GeneralServicetext $service)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServicetext', array($service));

        return parent::setServicetext($service);
    }

    /**
     * {@inheritDoc}
     */
    public function getServicetext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServicetext', array());

        return parent::getServicetext();
    }

    /**
     * {@inheritDoc}
     */
    public function setEm($em)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEm', array($em));

        return parent::setEm($em);
    }

    /**
     * {@inheritDoc}
     */
    public function getEm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEm', array());

        return parent::getEm();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', array($nom));

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', array());

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Users\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setImgservice(\Produit\ServiceBundle\Entity\Imgservice $imgservice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImgservice', array($imgservice));

        return parent::setImgservice($imgservice);
    }

    /**
     * {@inheritDoc}
     */
    public function getImgservice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImgservice', array());

        return parent::getImgservice();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvenement(\Produit\ServiceBundle\Entity\Evenement $evenements)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvenement', array($evenements));

        return parent::addEvenement($evenements);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvenement(\Produit\ServiceBundle\Entity\Evenement $evenements)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvenement', array($evenements));

        return parent::removeEvenement($evenements);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvenements()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvenements', array());

        return parent::getEvenements();
    }

    /**
     * {@inheritDoc}
     */
    public function addCommentaireblog(\Produit\ServiceBundle\Entity\Commentaireblog $commentaireblogs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCommentaireblog', array($commentaireblogs));

        return parent::addCommentaireblog($commentaireblogs);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCommentaireblog(\Produit\ServiceBundle\Entity\Commentaireblog $commentaireblogs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCommentaireblog', array($commentaireblogs));

        return parent::removeCommentaireblog($commentaireblogs);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaireblogs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaireblogs', array());

        return parent::getCommentaireblogs();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypearticle($typearticle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypearticle', array($typearticle));

        return parent::setTypearticle($typearticle);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypearticle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypearticle', array());

        return parent::getTypearticle();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(\Produit\ServiceBundle\Entity\Typearticle $type = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setBreve($breve)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBreve', array($breve));

        return parent::setBreve($breve);
    }

    /**
     * {@inheritDoc}
     */
    public function getBreve()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBreve', array());

        return parent::getBreve();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeyword($keyword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeyword', array($keyword));

        return parent::setKeyword($keyword);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeyword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeyword', array());

        return parent::getKeyword();
    }

    /**
     * {@inheritDoc}
     */
    public function setLink($link)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLink', array($link));

        return parent::setLink($link);
    }

    /**
     * {@inheritDoc}
     */
    public function getLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLink', array());

        return parent::getLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomcompte($nomcompte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomcompte', array($nomcompte));

        return parent::setNomcompte($nomcompte);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomcompte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomcompte', array());

        return parent::getNomcompte();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumcompte($numcompte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumcompte', array($numcompte));

        return parent::setNumcompte($numcompte);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumcompte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumcompte', array());

        return parent::getNumcompte();
    }

    /**
     * {@inheritDoc}
     */
    public function setRang($rang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRang', array($rang));

        return parent::setRang($rang);
    }

    /**
     * {@inheritDoc}
     */
    public function getRang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRang', array());

        return parent::getRang();
    }

    /**
     * {@inheritDoc}
     */
    public function setSouscategorie(\Produit\ProduitBundle\Entity\Souscategorie $souscategorie = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSouscategorie', array($souscategorie));

        return parent::setSouscategorie($souscategorie);
    }

    /**
     * {@inheritDoc}
     */
    public function getSouscategorie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSouscategorie', array());

        return parent::getSouscategorie();
    }

    /**
     * {@inheritDoc}
     */
    public function getPartiearticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartiearticles', array());

        return parent::getPartiearticles();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrincipal($principal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrincipal', array($principal));

        return parent::setPrincipal($principal);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrincipal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrincipal', array());

        return parent::getPrincipal();
    }

    /**
     * {@inheritDoc}
     */
    public function addRessourcearticle(\Produit\ServiceBundle\Entity\Ressourcearticle $ressourcearticles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRessourcearticle', array($ressourcearticles));

        return parent::addRessourcearticle($ressourcearticles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRessourcearticle(\Produit\ServiceBundle\Entity\Ressourcearticle $ressourcearticles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRessourcearticle', array($ressourcearticles));

        return parent::removeRessourcearticle($ressourcearticles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRessourcearticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRessourcearticles', array());

        return parent::getRessourcearticles();
    }

}
