<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="icon" href="{{ asset('admintemplate/images/logo.png') }}" sizes="32x32">
{% block meta %} {% endblock %}

<title>{% block title %}{{ site }}{% endblock %}</title>

{% block stylesheets %}

<link rel="stylesheet" href="{{ asset('template/css/bootstrap2.css') }}" type="text/css" />
<style> 
	body{
	  background: rgba(0, 0, 0, 0.1);
	  line-height: 1.45rem;
	  color: #444;
	}
	body.freeze {
	  pointer-events: none;
	}

	h1 {
	  margin: 0;
	  margin-bottom: 2rem;
	  text-align: center;
	  font-weight: normal;
	  line-height: 2.2rem;
	}

	.section {
	  max-width: 500px;
	  padding: 4rem;
	  margin: 5vh auto 0 auto;
	  background: white;
	  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
	}
	.section:before {
	  content: "";
	  width: 100%;
	  background: #092759;
	  height: 170px;
	  position: absolute;
	  top: 0;
	  left: 0;
	  z-index: -1;
	  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
	}

	.form-instructions {
	  text-align: center;
	}

	form {
	  margin: 2rem auto;
	  width: 100%;
	  max-width: 330px;
	  will-change: transform;
	}

	.fieldgroup {
	  margin: 1.5rem 0;
	  position: relative;
	}

	label {
	  position: absolute;
	  top: .8rem;
	  left: 0;
	  display: block;
	  font-size: 1rem;
	  transition: 0.2s ease-out;
	  opacity: .5;
	  will-change: top, font-size;
	}
	label:hover {
	  cursor: text;
	}

	input {
	  border: 1px solid #fff;
	  font-size: 1.2rem;
	  padding: .6rem;
	  padding-left: 0;
	  background: transparent;
	  border: none;
	  border-bottom: 2px solid #444;
	  transition: 0.2s;
	  width: calc(100% - .6rem);
	  max-width: 350px;
	  border-radius: 0;
	}
	input:focus {
	  outline: none;
	}
	input:valid {
	  border-color: #444;
	}
	input:focus + label, input.hasInput + label {
	  top: -.8rem;
	  font-size: .7rem;
	}

	.btn {
	  color: #fff;
	  background-color: #092759;
	  padding: .8rem;
	  font-size: 1.2rem;
	  line-height: 1.2rem;
	  border-radius: 5px;
	  border: 2px solid transparent;
	  min-width: 45px !important;
	}
	.btn:hover, .btn.hover {
	  color: #fff;
	  background-color: #092759;
	  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
	  transition: .2s;
	  cursor: pointer;
	}
	.btn:active, .btn.active {
	  color: #fff;
	  background-color: #00b858;
	  box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.3);
	  outline: 2px solid #092759;
	}
	.btn:focus, .btn.focus {
	  color: #fff;
	  outline: 2px solid #092759;
	  outline-offset: 2px;
	}
	.btn:active:focus, .btn.active.focus {
	  outline: 4px solid #092759;
	}
	.btn.hover, .btn.active {
	  outline: none;
	}

	.btn-alt {
	  background-color: transparent;
	  color: #0bcc6c;
	  border: 2px solid #0bcc6c;
	}
	.btn-alt:hover, .btn-alt.hover {
	  background-color: transparent;
	  color: #00a444;
	  border-color: #00a444;
	  text-shadow: none;
	}
	.btn-alt:focus, .btn-alt.focus {
	  color: #00b858;
	}
	.btn-alt:active, .btn-alt.active {
	  color: #fff;
	  background-color: #0bcc6c;
	  text-shadow: 0 -1px 0 rgba(255, 255, 255, 0.2);
	}
	.btn-alt.hover, .btn-alt.active {
	  outline: none;
	}

	.buttons {
	  display: flex;
	}
	.buttons .btn {
	  margin-right: 15px;
	}

	form .btn {
	  display: inline-block;
	  width: 100%;
	  max-width: 220px;
	  margin: 4rem auto 0 auto;
	}

	[data-step="4"] button.btn {
	  display: block;
	  margin: 0 auto;
	}

	.form-progress {
	  position: relative;
	  display: block;
	  margin: 3rem auto;
	  width: 100%;
	  max-width: 400px;
	}

	progress {
	  display: block;
	  position: relative;
	  top: 5px;
	  left: 5px;
	  -webkit-appearance: none;
	  -moz-appearance: none;
		   appearance: none;
	  background: #0bcc6c;
	  width: 100%;
	  height: 5px;
	  background: none;
	  transition: 1s;
	  will-change: contents;
	}
	progress::-webkit-progress-bar {
	  background-color: #ddd;
	}
	progress::-webkit-progress-value {
	  background-color: #0bcc6c;
	  transition: all 0.5s ease-in-out;
	}

	.form-progress-indicator {
	  position: absolute;
	  top: -6px;
	  left: 0;
	  display: inline-block;
	  width: 20px;
	  height: 20px;
	  background: white;
	  border: 3px solid #ddd;
	  border-radius: 50%;
	  transition: all .2s ease-in-out;
	  transition-delay: .3s;
	  will-change: transform;
	}
	.form-progress-indicator.one {
	  left: 0;
	}
	.form-progress-indicator.two {
	  left: 33%;
	}
	.form-progress-indicator.three {
	  left: 66%;
	}
	.form-progress-indicator.four {
	  left: 100%;
	}
	.form-progress-indicator.active {
	  -webkit-animation: bounce .5s forwards;
			  animation: bounce .5s forwards;
	  -webkit-animation-delay: .5s;
			  animation-delay: .5s;
	  border-color: #0bcc6c;
	}

	.animation-container {
	  position: relative;
	  width: 100%;
	  transition: .3s;
	  will-change: padding;
	  overflow: hidden;
	}

	.form-step {
	  position: absolute;
	  transition: 1s ease-in-out;
	  transition-timing-function: ease-in-out;
	  will-change: transform, opacity;
	}

	.form-step.leaving {
	  -webkit-animation: left-and-out .5s forwards;
			  animation: left-and-out .5s forwards;
	}

	.form-step.waiting {
	  -webkit-transform: translateX(400px);
			  transform: translateX(400px);
	}

	.form-step.coming {
	  -webkit-animation: right-and-in .5s forwards;
			  animation: right-and-in .5s forwards;
	}

	@-webkit-keyframes left-and-out {
	  100% {
		opacity: 0;
		-webkit-transform: translateX(-400px);
				transform: translateX(-400px);
	  }
	}

	@keyframes left-and-out {
	  100% {
		opacity: 0;
		-webkit-transform: translateX(-400px);
				transform: translateX(-400px);
	  }
	}
	@-webkit-keyframes right-and-in {
	  100% {
		opacity: 1;
		-webkit-transform: translateX(0);
				transform: translateX(0);
	  }
	}
	@keyframes right-and-in {
	  100% {
		opacity: 1;
		-webkit-transform: translateX(0);
				transform: translateX(0);
	  }
	}
	@-webkit-keyframes bounce {
	  50% {
		-webkit-transform: scale(1.5);
				transform: scale(1.5);
	  }
	  100% {
		-webkit-transform: scale(1);
				transform: scale(1);
	  }
	}
	@keyframes bounce {
	  50% {
		-webkit-transform: scale(1.5);
				transform: scale(1.5);
	  }
	  100% {
		-webkit-transform: scale(1);
				transform: scale(1);
	  }
	}
	.sr-only {
	  position: absolute;
	  width: 1px;
	  height: 1px;
	  padding: 0;
	  margin: -1px;
	  overflow: hidden;
	  clip: rect(0, 0, 0, 0);
	  border: 0;
	}

	.hidden {
	  display: none;
	}
	
	.or-spacer {
	  margin-top: 10px;
	  margin-left: 0px;
	  width: 300px;
	  position: relative;
	  display: inline-block;
	}
	.or-spacer .mask {
	  overflow: hidden;
	  height: 20px;
	}
	.or-spacer .mask:after {
	  content: '';
	  display: block;
	  margin: -25px auto 0;
	  width: 100%;
	  height: 25px;
	  border-radius: 125px / 12px;
	  box-shadow: 0 0 8px black;
	}
	.or-spacer span {
	  width: 50px;
	  height: 50px;
	  position: absolute;
	  bottom: 100%;
	  margin-bottom: -25px;
	  left: 50%;
	  margin-left: -25px;
	  border-radius: 100%;
	  box-shadow: 0 2px 4px #999;
	  background: white;
	}
	.or-spacer span i {
	  position: absolute;
	  top: 4px;
	  bottom: 4px;
	  left: 4px;
	  right: 4px;
	  border-radius: 100%;
	  border: 1px dashed #aaa;
	  text-align: center;
	  line-height: 40px;
	  font-style: normal;
	  color: #999;
	}

	.or-spacer-vertical {
	  display: inline-block;
	  margin-top: 100px;
	  margin-left: 100px;
	  width: 100px;
	  position: relative;
	}
	.or-spacer-vertical .mask {
	  overflow: hidden;
	  width: 20px;
	  height: 200px;
	}
	.or-spacer-vertical.left .mask:after {
	  content: '';
	  display: block;
	  margin-left: -20px;
	  width: 20px;
	  height: 100%;
	  border-radius: 12px / 125px;
	  box-shadow: 0 0 8px black;
	}
	.or-spacer-vertical.right .mask:before {
	  content: '';
	  display: block;
	  margin-left: 20px;
	  width: 20px;
	  height: 100%;
	  border-radius: 12px / 125px;
	  box-shadow: 0 0 8px black;
	}
</style> 
<link href="http://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css" rel="stylesheet">

<script src="{{ asset('template/js/jquery.min.js') }}"></script>
<script src="{{ asset('template/js/bootstrap-3.1.1.min.js') }}"></script>
{% endblock %}
</head> 

<body class="homepage" style="padding: 0px; overflow-x: hidden;">

  {% block body %}
        
  {% endblock %}
  {{ render(controller("App\\Controller\\General\\Template\\MenuController:footer", {'position': 'login'})) }}
	
	<script type="text/javascript">
		var $body = $('body');
		var $progressBar = $('progress');
		var $animContainer = $('.animation-container');
		var value = 0;
		var transitionEnd = 'webkitTransitionEnd transitionend';

		/**
		 * Resets the form back to the default state.
		 * ==========================================
		 */
		function formReset() {
			value = 0;

			$animContainer.css({
				'paddingBottom': $('.js-form-step[data-step="1"]').height() + 'px'
			});
			
			console.warn('Form reset.');
			return false;
		}

		/**
		 * Sets up the click handlers on the form. Next/reset.
		 * ===================================================
		 */
		function setupClickHandlers() {

			return false;
		}


		/**
		 * Sets up and handles the float labels on the inputs.
		 =====================================================
		 */
		function setupFloatLabels() {
			// Check the inputs to see if we should keep the label floating or not
			$('form input').not('button').on('blur', function() {

				// Different validation for different inputs
				switch (this.tagName) {
					case 'SELECT':
						if (this.value > 0) {
							this.className = 'hasInput';
						} else {
							this.className = '';
						}
						break;

					case 'INPUT':
						if (this.value !== '') {
							this.className = 'hasInput';
						} else {
							this.className = '';
						}
						break;

					default:
						break;
				}
			});
			
			return false;
		}

		/**
		 * Gets the party started.
		 * =======================
		 */
		function init() {
			formReset();
			setupFloatLabels();
		}

		init();
	</script>

	{% block srcjavascript %}

	{% endblock %}
	<script type="text/javascript">
 
  {% block javascript %}

  {% endblock %}
  
  </script>
</body>
</html>